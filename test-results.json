
> generation-art@0.1.0 test /Users/kevinmaes/github.com/kevinmaes/generation-art
> vitest --run --reporter=json

{"numTotalTestSuites":109,"numPassedTestSuites":104,"numFailedTestSuites":5,"numPendingTestSuites":0,"numTotalTests":307,"numPassedTests":263,"numFailedTests":11,"numPendingTests":3,"numTodoTests":30,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1754243814377,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Graph Analysis Functions"],"fullName":"Graph Analysis Functions should analyze graph structure correctly","status":"passed","title":"should analyze graph structure correctly","duration":1.17025000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Graph Analysis Functions"],"fullName":"Graph Analysis Functions should analyze temporal patterns correctly","status":"passed","title":"should analyze temporal patterns correctly","duration":0.6081249999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["Graph Analysis Functions"],"fullName":"Graph Analysis Functions should analyze geographic patterns correctly","status":"passed","title":"should analyze geographic patterns correctly","duration":0.28429199999999355,"failureMessages":[],"meta":{}},{"ancestorTitles":["Graph Analysis Functions"],"fullName":"Graph Analysis Functions should analyze demographics correctly","status":"passed","title":"should analyze demographics correctly","duration":0.34550000000001546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Graph Analysis Functions"],"fullName":"Graph Analysis Functions should analyze relationships correctly","status":"passed","title":"should analyze relationships correctly","duration":0.19770799999997735,"failureMessages":[],"meta":{}},{"ancestorTitles":["Graph Analysis Functions"],"fullName":"Graph Analysis Functions should generate edges correctly","status":"passed","title":"should generate edges correctly","duration":0.22408300000000736,"failureMessages":[],"meta":{}},{"ancestorTitles":["Graph Analysis Functions"],"fullName":"Graph Analysis Functions should analyze edges correctly","status":"passed","title":"should analyze edges correctly","duration":0.15974999999997408,"failureMessages":[],"meta":{}},{"ancestorTitles":["Graph Analysis Functions"],"fullName":"Graph Analysis Functions should generate tree summary correctly","status":"passed","title":"should generate tree summary correctly","duration":0.2291670000000181,"failureMessages":[],"meta":{}}],"startTime":1754243816518,"endTime":1754243816521.2292,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/cli/metadata/graph-analysis.test.ts"},{"assertionResults":[{"ancestorTitles":["Comprehensive Analysis Integration"],"fullName":"Comprehensive Analysis Integration should process GEDCOM data with comprehensive analysis","status":"passed","title":"should process GEDCOM data with comprehensive analysis","duration":3.4492079999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Analysis Integration"],"fullName":"Comprehensive Analysis Integration should enhance individual metadata with graph data","status":"passed","title":"should enhance individual metadata with graph data","duration":0.4230000000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["Comprehensive Analysis Integration"],"fullName":"Comprehensive Analysis Integration should enhance family metadata with graph data","status":"passed","title":"should enhance family metadata with graph data","duration":0.4916249999999991,"failureMessages":[],"meta":{}}],"startTime":1754243816506,"endTime":1754243816510.4917,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/cli/metadata/integration.test.ts"},{"assertionResults":[{"ancestorTitles":["metadataExtractionConfig - Pure Functions","calculateLifespan"],"fullName":"metadataExtractionConfig - Pure Functions calculateLifespan should calculate lifespan correctly","status":"passed","title":"should calculate lifespan correctly","duration":2.9927089999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","calculateLifespan"],"fullName":"metadataExtractionConfig - Pure Functions calculateLifespan should return null for invalid dates","status":"passed","title":"should return null for invalid dates","duration":0.10812499999997272,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","calculateLifespan"],"fullName":"metadataExtractionConfig - Pure Functions calculateLifespan should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.06720900000004804,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","normalizeLifespan"],"fullName":"metadataExtractionConfig - Pure Functions normalizeLifespan should normalize lifespan relative to max","status":"passed","title":"should normalize lifespan relative to max","duration":0.19920799999999872,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","normalizeLifespan"],"fullName":"metadataExtractionConfig - Pure Functions normalizeLifespan should handle empty array","status":"passed","title":"should handle empty array","duration":0.05833299999994779,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","isIndividualAlive"],"fullName":"metadataExtractionConfig - Pure Functions isIndividualAlive should return true when no death date","status":"passed","title":"should return true when no death date","duration":0.07479200000000219,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","isIndividualAlive"],"fullName":"metadataExtractionConfig - Pure Functions isIndividualAlive should return false when death date exists","status":"passed","title":"should return false when death date exists","duration":0.12387499999999818,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","extractBirthMonth"],"fullName":"metadataExtractionConfig - Pure Functions extractBirthMonth should extract birth month correctly","status":"passed","title":"should extract birth month correctly","duration":0.08325000000002092,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","extractBirthMonth"],"fullName":"metadataExtractionConfig - Pure Functions extractBirthMonth should return null for invalid date","status":"passed","title":"should return null for invalid date","duration":0.27212500000007367,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","calculateZodiacSign"],"fullName":"metadataExtractionConfig - Pure Functions calculateZodiacSign should calculate zodiac sign correctly","status":"passed","title":"should calculate zodiac sign correctly","duration":0.13874999999995907,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","calculateZodiacSign"],"fullName":"metadataExtractionConfig - Pure Functions calculateZodiacSign should return null for invalid date","status":"passed","title":"should return null for invalid date","duration":0.04312500000003183,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","calculateZodiacSign"],"fullName":"metadataExtractionConfig - Pure Functions calculateZodiacSign should handle different zodiac signs","status":"passed","title":"should handle different zodiac signs","duration":0.20666699999992488,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","countFamilyChildren"],"fullName":"metadataExtractionConfig - Pure Functions countFamilyChildren should count children correctly","status":"passed","title":"should count children correctly","duration":0.059499999999957254,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","countFamilyChildren"],"fullName":"metadataExtractionConfig - Pure Functions countFamilyChildren should return 0 for no children","status":"passed","title":"should return 0 for no children","duration":0.03266699999994671,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","countFamilyChildren"],"fullName":"metadataExtractionConfig - Pure Functions countFamilyChildren should handle undefined children","status":"passed","title":"should handle undefined children","duration":0.030375000000049113,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","getMetadataFieldsByScope"],"fullName":"metadataExtractionConfig - Pure Functions getMetadataFieldsByScope should return individual fields","status":"passed","title":"should return individual fields","duration":0.10108400000001438,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","getMetadataFieldsByScope"],"fullName":"metadataExtractionConfig - Pure Functions getMetadataFieldsByScope should return family fields","status":"passed","title":"should return family fields","duration":0.050457999999935055,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","getMetadataFieldsByScope"],"fullName":"metadataExtractionConfig - Pure Functions getMetadataFieldsByScope should return tree fields","status":"passed","title":"should return tree fields","duration":0.04787500000009004,"failureMessages":[],"meta":{}},{"ancestorTitles":["metadataExtractionConfig - Pure Functions","getMetadataFieldsRequiringMasking"],"fullName":"metadataExtractionConfig - Pure Functions getMetadataFieldsRequiringMasking should return only fields that require masking","status":"passed","title":"should return only fields that require masking","duration":0.05866699999990033,"failureMessages":[],"meta":{}}],"startTime":1754243816184,"endTime":1754243816189.101,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/cli/metadata/metadata-extraction-config.test.ts"},{"assertionResults":[{"ancestorTitles":["MetadataTransformationPipeline - Functional","transformGedcomDataWithMetadata"],"fullName":"MetadataTransformationPipeline - Functional transformGedcomDataWithMetadata should transform individuals with metadata","status":"passed","title":"should transform individuals with metadata","duration":2.1460409999999683,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","transformGedcomDataWithMetadata"],"fullName":"MetadataTransformationPipeline - Functional transformGedcomDataWithMetadata should extract lifespan metadata","status":"passed","title":"should extract lifespan metadata","duration":0.5211669999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","transformGedcomDataWithMetadata"],"fullName":"MetadataTransformationPipeline - Functional transformGedcomDataWithMetadata should extract isAlive metadata","status":"passed","title":"should extract isAlive metadata","duration":0.1672919999999749,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","transformGedcomDataWithMetadata"],"fullName":"MetadataTransformationPipeline - Functional transformGedcomDataWithMetadata should extract birth month metadata","status":"passed","title":"should extract birth month metadata","duration":0.20445799999993142,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","transformGedcomDataWithMetadata"],"fullName":"MetadataTransformationPipeline - Functional transformGedcomDataWithMetadata should extract zodiac sign metadata","status":"passed","title":"should extract zodiac sign metadata","duration":0.26774999999997817,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","transformGedcomDataWithMetadata"],"fullName":"MetadataTransformationPipeline - Functional transformGedcomDataWithMetadata should extract family metadata","status":"passed","title":"should extract family metadata","duration":0.19029199999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","transformGedcomDataWithMetadata"],"fullName":"MetadataTransformationPipeline - Functional transformGedcomDataWithMetadata should extract tree metadata","status":"passed","title":"should extract tree metadata","duration":0.10887500000001182,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","transformGedcomDataWithMetadata"],"fullName":"MetadataTransformationPipeline - Functional transformGedcomDataWithMetadata should be pure - same input produces same output","status":"passed","title":"should be pure - same input produces same output","duration":0.19925000000000637,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","PII Masking Functions","maskLifespan"],"fullName":"MetadataTransformationPipeline - Functional PII Masking Functions maskLifespan should mask lifespan values with noise","status":"passed","title":"should mask lifespan values with noise","duration":0.53125,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","PII Masking Functions","maskLifespan"],"fullName":"MetadataTransformationPipeline - Functional PII Masking Functions maskLifespan should keep values within bounds","status":"passed","title":"should keep values within bounds","duration":0.17579099999989012,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","PII Masking Functions","maskBirthMonth"],"fullName":"MetadataTransformationPipeline - Functional PII Masking Functions maskBirthMonth should mask birth month values","status":"passed","title":"should mask birth month values","duration":0.0681250000000091,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","PII Masking Functions","maskBirthMonth"],"fullName":"MetadataTransformationPipeline - Functional PII Masking Functions maskBirthMonth should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.15354200000001583,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","Edge Cases"],"fullName":"MetadataTransformationPipeline - Functional Edge Cases should handle individuals without birth dates","status":"passed","title":"should handle individuals without birth dates","duration":0.13979200000005676,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","Edge Cases"],"fullName":"MetadataTransformationPipeline - Functional Edge Cases should handle empty arrays","status":"passed","title":"should handle empty arrays","duration":0.16283399999997528,"failureMessages":[],"meta":{}},{"ancestorTitles":["MetadataTransformationPipeline - Functional","Edge Cases"],"fullName":"MetadataTransformationPipeline - Functional Edge Cases should handle invalid dates gracefully","status":"passed","title":"should handle invalid dates gracefully","duration":0.08054099999992559,"failureMessages":[],"meta":{}}],"startTime":1754243816122,"endTime":1754243816127.1758,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/cli/metadata/transformation-pipeline.test.ts"},{"assertionResults":[{"ancestorTitles":["Integration: Constants + Helpers"],"fullName":"Integration: Constants + Helpers should work together for coordinate calculation","status":"passed","title":"should work together for coordinate calculation","duration":0.7866670000000227,"failureMessages":[],"meta":{}},{"ancestorTitles":["Integration: Constants + Helpers"],"fullName":"Integration: Constants + Helpers should maintain aspect ratio consistency","status":"passed","title":"should maintain aspect ratio consistency","duration":0.2477089999999862,"failureMessages":[],"meta":{}},{"ancestorTitles":["Integration: Constants + Helpers"],"fullName":"Integration: Constants + Helpers should calculate correct scale factor","status":"passed","title":"should calculate correct scale factor","duration":0.06204199999996263,"failureMessages":[],"meta":{}},{"ancestorTitles":["Integration: Constants + Helpers"],"fullName":"Integration: Constants + Helpers should generate consistent coordinates across different scales","status":"passed","title":"should generate consistent coordinates across different scales","duration":0.18112500000000864,"failureMessages":[],"meta":{}},{"ancestorTitles":["Integration: Constants + Helpers"],"fullName":"Integration: Constants + Helpers should have correct export filenames","status":"passed","title":"should have correct export filenames","duration":0.06799999999998363,"failureMessages":[],"meta":{}}],"startTime":1754243816515,"endTime":1754243816517.068,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/integration.test.ts"},{"assertionResults":[{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should strip names and replace with anonymous identifiers","status":"passed","title":"should strip names and replace with anonymous identifiers","duration":1.082208000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should strip detailed dates and keep only years","status":"passed","title":"should strip detailed dates and keep only years","duration":0.4867500000000291,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should strip all location data","status":"passed","title":"should strip all location data","duration":0.484749999999849,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should preserve structural relationships","status":"passed","title":"should preserve structural relationships","duration":0.25187499999992724,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should preserve metadata statistics","status":"passed","title":"should preserve metadata statistics","duration":0.08666700000003402,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should preserve non-PII individual metadata","status":"passed","title":"should preserve non-PII individual metadata","duration":0.10108400000012807,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should provide accurate stripping statistics","status":"passed","title":"should provide accurate stripping statistics","duration":0.08733299999994415,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should handle different name patterns","status":"passed","title":"should handle different name patterns","duration":0.07079199999998309,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","stripPIIForLLM"],"fullName":"PII Stripping stripPIIForLLM should handle missing data gracefully","status":"passed","title":"should handle missing data gracefully","duration":0.40525000000002365,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","validatePIIStripping"],"fullName":"PII Stripping validatePIIStripping should validate properly anonymized data","status":"passed","title":"should validate properly anonymized data","duration":0.5402090000000044,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","validatePIIStripping"],"fullName":"PII Stripping validatePIIStripping should detect non-anonymized names","status":"passed","title":"should detect non-anonymized names","duration":0.06770800000003874,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","validatePIIStripping"],"fullName":"PII Stripping validatePIIStripping should detect location data in birth/death objects","status":"passed","title":"should detect location data in birth/death objects","duration":0.18266700000003766,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","Integration"],"fullName":"PII Stripping Integration should maintain data structure integrity","status":"passed","title":"should maintain data structure integrity","duration":0.24949999999989814,"failureMessages":[],"meta":{}},{"ancestorTitles":["PII Stripping","Integration"],"fullName":"PII Stripping Integration should be suitable for LLM transmission","status":"passed","title":"should be suitable for LLM transmission","duration":0.13579200000003766,"failureMessages":[],"meta":{}}],"startTime":1754243815536,"endTime":1754243815540.2495,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/shared/utils/pii-stripping.test.ts"},{"assertionResults":[{"ancestorTitles":["SimpleGedcomParser"],"fullName":"SimpleGedcomParser should parse a simple GEDCOM file with one individual","status":"passed","title":"should parse a simple GEDCOM file with one individual","duration":5.01520800000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleGedcomParser"],"fullName":"SimpleGedcomParser should parse a GEDCOM file with a family","status":"passed","title":"should parse a GEDCOM file with a family","duration":0.9168750000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleGedcomParser"],"fullName":"SimpleGedcomParser should handle empty GEDCOM file","status":"passed","title":"should handle empty GEDCOM file","duration":0.28583299999996825,"failureMessages":[],"meta":{}},{"ancestorTitles":["SimpleGedcomParser"],"fullName":"SimpleGedcomParser should handle malformed GEDCOM lines","status":"passed","title":"should handle malformed GEDCOM lines","duration":0.3347079999999778,"failureMessages":[],"meta":{}}],"startTime":1754243816407,"endTime":1754243816413.3347,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/cli/parsers/__tests__/SimpleGedcomParser.test.ts"},{"assertionResults":[{"ancestorTitles":["Zod Schemas","IndividualSchema"],"fullName":"Zod Schemas IndividualSchema should validate a valid individual","status":"passed","title":"should validate a valid individual","duration":1.6812499999999773,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","IndividualSchema"],"fullName":"Zod Schemas IndividualSchema should reject invalid individual","status":"passed","title":"should reject invalid individual","duration":0.35899999999998045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","AugmentedIndividualSchema"],"fullName":"Zod Schemas AugmentedIndividualSchema should validate a valid augmented individual","status":"passed","title":"should validate a valid augmented individual","duration":0.9005830000000401,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","FlexibleGedcomDataSchema"],"fullName":"Zod Schemas FlexibleGedcomDataSchema should validate GedcomDataWithMetadata format","status":"passed","title":"should validate GedcomDataWithMetadata format","duration":1.1943750000000364,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","FlexibleGedcomDataSchema"],"fullName":"Zod Schemas FlexibleGedcomDataSchema should validate array format (enhanced individuals)","status":"passed","title":"should validate array format (enhanced individuals)","duration":0.11683299999998553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","FlexibleGedcomDataSchema"],"fullName":"Zod Schemas FlexibleGedcomDataSchema should validate object format without metadata","status":"passed","title":"should validate object format without metadata","duration":0.257000000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","validateFlexibleGedcomData"],"fullName":"Zod Schemas validateFlexibleGedcomData should transform array format to GedcomDataWithMetadata","status":"passed","title":"should transform array format to GedcomDataWithMetadata","duration":1.13658300000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","validateFlexibleGedcomData"],"fullName":"Zod Schemas validateFlexibleGedcomData should handle object format without metadata","status":"passed","title":"should handle object format without metadata","duration":0.8580840000000194,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","safeValidateFlexibleGedcomData"],"fullName":"Zod Schemas safeValidateFlexibleGedcomData should return success for valid data","status":"passed","title":"should return success for valid data","duration":0.9771250000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Zod Schemas","safeValidateFlexibleGedcomData"],"fullName":"Zod Schemas safeValidateFlexibleGedcomData should return error for invalid data","status":"passed","title":"should return error for invalid data","duration":0.8792500000000132,"failureMessages":[],"meta":{}}],"startTime":1754243816077,"endTime":1754243816085.8792,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/shared/types/schemas.test.ts"},{"assertionResults":[{"ancestorTitles":["Type Predicates","isNumber"],"fullName":"Type Predicates isNumber should return true for valid numbers","status":"passed","title":"should return true for valid numbers","duration":0.8629579999999919,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isNumber"],"fullName":"Type Predicates isNumber should return false for invalid numbers","status":"passed","title":"should return false for invalid numbers","duration":0.11470900000000483,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isNumber"],"fullName":"Type Predicates isNumber should return false for non-numbers","status":"passed","title":"should return false for non-numbers","duration":0.23483300000003737,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isString"],"fullName":"Type Predicates isString should return true for strings","status":"passed","title":"should return true for strings","duration":0.08029199999998582,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isString"],"fullName":"Type Predicates isString should return false for non-strings","status":"passed","title":"should return false for non-strings","duration":0.09308400000003303,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isBoolean"],"fullName":"Type Predicates isBoolean should return true for booleans","status":"passed","title":"should return true for booleans","duration":4.961957999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isBoolean"],"fullName":"Type Predicates isBoolean should return false for non-booleans","status":"passed","title":"should return false for non-booleans","duration":0.18841700000001538,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isNonNullNumber"],"fullName":"Type Predicates isNonNullNumber should return true for valid non-null numbers","status":"passed","title":"should return true for valid non-null numbers","duration":0.271082999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isNonNullNumber"],"fullName":"Type Predicates isNonNullNumber should return false for null and invalid numbers","status":"passed","title":"should return false for null and invalid numbers","duration":11.354249999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isBirthMonth"],"fullName":"Type Predicates isBirthMonth should return true for valid birth months","status":"passed","title":"should return true for valid birth months","duration":0.22699999999997544,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isBirthMonth"],"fullName":"Type Predicates isBirthMonth should return false for invalid birth months","status":"passed","title":"should return false for invalid birth months","duration":0.07558300000005147,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isBirthMonth"],"fullName":"Type Predicates isBirthMonth should return false for non-numbers","status":"passed","title":"should return false for non-numbers","duration":0.053749999999979536,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isLifespan"],"fullName":"Type Predicates isLifespan should return true for valid lifespans","status":"passed","title":"should return true for valid lifespans","duration":0.0618750000000432,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isLifespan"],"fullName":"Type Predicates isLifespan should return false for negative lifespans","status":"passed","title":"should return false for negative lifespans","duration":0.039707999999961885,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isLifespan"],"fullName":"Type Predicates isLifespan should return false for non-numbers","status":"passed","title":"should return false for non-numbers","duration":0.049666000000001986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isNormalizedLifespan"],"fullName":"Type Predicates isNormalizedLifespan should return true for valid normalized lifespans","status":"passed","title":"should return true for valid normalized lifespans","duration":0.06220899999999574,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isNormalizedLifespan"],"fullName":"Type Predicates isNormalizedLifespan should return false for out-of-range values","status":"passed","title":"should return false for out-of-range values","duration":0.038291000000015174,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isNormalizedLifespan"],"fullName":"Type Predicates isNormalizedLifespan should return false for non-numbers","status":"passed","title":"should return false for non-numbers","duration":0.04650000000003729,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isIndividualId"],"fullName":"Type Predicates isIndividualId should return true for valid individual IDs","status":"passed","title":"should return true for valid individual IDs","duration":15.406541000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isIndividualId"],"fullName":"Type Predicates isIndividualId should return false for empty strings and non-strings","status":"passed","title":"should return false for empty strings and non-strings","duration":8.896791999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isDateString"],"fullName":"Type Predicates isDateString should return true for valid date strings","status":"passed","title":"should return true for valid date strings","duration":0.11750000000000682,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isDateString"],"fullName":"Type Predicates isDateString should return false for invalid date strings","status":"passed","title":"should return false for invalid date strings","duration":0.07166699999999082,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Predicates","isDateString"],"fullName":"Type Predicates isDateString should return false for non-strings","status":"passed","title":"should return false for non-strings","duration":0.057249999999953616,"failureMessages":[],"meta":{}}],"startTime":1754243816527,"endTime":1754243816571.1174,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/shared/types/type-predicates.test.ts"},{"assertionResults":[{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should calculate edge opacity based on relationship density dimension","status":"passed","title":"should calculate edge opacity based on relationship density dimension","duration":2.717583000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should calculate edge opacity based on generation distance dimension","status":"passed","title":"should calculate edge opacity based on generation distance dimension","duration":0.7052090000001954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should calculate edge opacity based on combined children count dimension","status":"passed","title":"should calculate edge opacity based on combined children count dimension","duration":1.6019169999999576,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should calculate edge opacity based on average lifespan dimension","status":"passed","title":"should calculate edge opacity based on average lifespan dimension","duration":1.8443750000001273,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should respect primary and secondary dimension weights","status":"passed","title":"should respect primary and secondary dimension weights","duration":2.4486249999999927,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should factor in edge length (longer edges more transparent)","status":"passed","title":"should factor in edge length (longer edges more transparent)","duration":2.076665999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should calculate edge width based on relationship type","status":"passed","title":"should calculate edge width based on relationship type","duration":0.43800000000010186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should apply secondary color from visual parameters","status":"passed","title":"should apply secondary color from visual parameters","duration":2.49345900000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should calculate opacity within valid range (0.1 to 1.0)","status":"passed","title":"should calculate opacity within valid range (0.1 to 1.0)","duration":2.6632090000000517,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should preserve existing visual metadata except opacity, width, and color","status":"passed","title":"should preserve existing visual metadata except opacity, width, and color","duration":4.9777500000000146,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should handle empty edge data gracefully","status":"passed","title":"should handle empty edge data gracefully","duration":0.20450000000005275,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should handle invalid edge references gracefully","status":"passed","title":"should handle invalid edge references gracefully","duration":2.470209000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["Edge Opacity Transformer"],"fullName":"Edge Opacity Transformer should respect edge opacity parameter ranges","status":"passed","title":"should respect edge opacity parameter ranges","duration":6.665750000000116,"failureMessages":[],"meta":{}}],"startTime":1754243816064,"endTime":1754243816096.6658,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/edge-opacity.test.ts"},{"assertionResults":[{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should position individuals horizontally based on generation dimension","status":"todo","title":"should position individuals horizontally based on generation dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should position individuals horizontally based on birth year dimension","status":"todo","title":"should position individuals horizontally based on birth year dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should position individuals horizontally based on children count dimension","status":"todo","title":"should position individuals horizontally based on children count dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should position individuals horizontally based on lifespan dimension","status":"todo","title":"should position individuals horizontally based on lifespan dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should position individuals horizontally based on name length dimension","status":"todo","title":"should position individuals horizontally based on name length dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should respect primary and secondary dimension weights","status":"todo","title":"should respect primary and secondary dimension weights","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should apply temperature-based randomness correctly","status":"todo","title":"should apply temperature-based randomness correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should apply variation factor correctly","status":"todo","title":"should apply variation factor correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should respect horizontal padding parameter","status":"todo","title":"should respect horizontal padding parameter","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should respect spacing parameter (tight, compact, normal, loose, sparse)","status":"todo","title":"should respect spacing parameter (tight, compact, normal, loose, sparse)","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should apply node size based on visual parameters","status":"todo","title":"should apply node size based on visual parameters","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should apply primary color from visual parameters","status":"todo","title":"should apply primary color from visual parameters","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should preserve existing y position from previous transformers","status":"todo","title":"should preserve existing y position from previous transformers","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should handle empty individual data gracefully","status":"todo","title":"should handle empty individual data gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should handle missing dimension values with appropriate defaults","status":"todo","title":"should handle missing dimension values with appropriate defaults","failureMessages":[],"meta":{}}],"startTime":1754243814377,"endTime":1754243814377,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/horizontal-spread.test.ts"},{"assertionResults":[{"ancestorTitles":["nodeOpacityTransform"],"fullName":"nodeOpacityTransform should calculate different opacities for different individuals","status":"passed","title":"should calculate different opacities for different individuals","duration":5.9262919999999895,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeOpacityTransform"],"fullName":"nodeOpacityTransform should respect opacity range based on nodeOpacity setting","status":"passed","title":"should respect opacity range based on nodeOpacity setting","duration":2.5159160000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeOpacityTransform"],"fullName":"nodeOpacityTransform should vary opacity based on generation dimension","status":"passed","title":"should vary opacity based on generation dimension","duration":2.858167000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeOpacityTransform"],"fullName":"nodeOpacityTransform should handle missing individuals gracefully","status":"passed","title":"should handle missing individuals gracefully","duration":0.4013329999999655,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeOpacityTransform"],"fullName":"nodeOpacityTransform should preserve existing visual metadata","status":"passed","title":"should preserve existing visual metadata","duration":2.32974999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeOpacityTransform"],"fullName":"nodeOpacityTransform should never return NaN or invalid opacity values","status":"passed","title":"should never return NaN or invalid opacity values","duration":2.1252079999999864,"failureMessages":[],"meta":{}}],"startTime":1754243816056,"endTime":1754243816072.1252,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/node-opacity.test.ts"},{"assertionResults":[{"ancestorTitles":["nodeRotationTransform"],"fullName":"nodeRotationTransform should assign rotation based on birth year dimension","status":"passed","title":"should assign rotation based on birth year dimension","duration":3.719167000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeRotationTransform"],"fullName":"nodeRotationTransform should assign rotation based on generation dimension","status":"passed","title":"should assign rotation based on generation dimension","duration":1.7404999999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeRotationTransform"],"fullName":"nodeRotationTransform should assign rotation based on children count dimension","status":"passed","title":"should assign rotation based on children count dimension","duration":1.4942500000000223,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeRotationTransform"],"fullName":"nodeRotationTransform should assign rotation based on name length dimension","status":"passed","title":"should assign rotation based on name length dimension","duration":1.9877500000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeRotationTransform"],"fullName":"nodeRotationTransform should preserve existing visual metadata while adding rotation","status":"passed","title":"should preserve existing visual metadata while adding rotation","duration":6.676040999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeRotationTransform"],"fullName":"nodeRotationTransform should handle empty individuals gracefully","status":"passed","title":"should handle empty individuals gracefully","duration":0.2313750000000141,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeRotationTransform"],"fullName":"nodeRotationTransform should apply variation with temperature","status":"passed","title":"should apply variation with temperature","duration":2.283875000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeRotationTransform"],"fullName":"nodeRotationTransform should handle secondary dimension","status":"passed","title":"should handle secondary dimension","duration":1.3091249999999945,"failureMessages":[],"meta":{}}],"startTime":1754243816045,"endTime":1754243816065.309,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/node-rotation.test.ts"},{"assertionResults":[{"ancestorTitles":["nodeScaleTransform"],"fullName":"nodeScaleTransform should assign scale based on lifespan dimension","status":"passed","title":"should assign scale based on lifespan dimension","duration":4.3485840000000735,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform"],"fullName":"nodeScaleTransform should assign scale based on children count dimension","status":"passed","title":"should assign scale based on children count dimension","duration":1.100208000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform"],"fullName":"nodeScaleTransform should assign different scales for width and height with secondary dimension","status":"passed","title":"should assign different scales for width and height with secondary dimension","duration":0.9417909999999665,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform"],"fullName":"nodeScaleTransform should preserve existing visual metadata while adding scale","status":"passed","title":"should preserve existing visual metadata while adding scale","duration":2.801915999999892,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform"],"fullName":"nodeScaleTransform should handle empty individuals gracefully","status":"passed","title":"should handle empty individuals gracefully","duration":0.1953329999998914,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform"],"fullName":"nodeScaleTransform should apply variation with temperature","status":"passed","title":"should apply variation with temperature","duration":1.0697499999998854,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform"],"fullName":"nodeScaleTransform should handle generation dimension","status":"passed","title":"should handle generation dimension","duration":0.66599999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform"],"fullName":"nodeScaleTransform should handle name length dimension","status":"passed","title":"should handle name length dimension","duration":1.0962500000000546,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform","Bug fix tests - Edge cases and validation"],"fullName":"nodeScaleTransform Bug fix tests - Edge cases and validation should handle missing primary dimension gracefully","status":"passed","title":"should handle missing primary dimension gracefully","duration":2.6059999999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform","Bug fix tests - Edge cases and validation"],"fullName":"nodeScaleTransform Bug fix tests - Edge cases and validation should handle unknown primary dimension","status":"passed","title":"should handle unknown primary dimension","duration":1.5592910000000302,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform","Bug fix tests - Edge cases and validation"],"fullName":"nodeScaleTransform Bug fix tests - Edge cases and validation should handle unknown secondary dimension","status":"passed","title":"should handle unknown secondary dimension","duration":2.875874999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform","Bug fix tests - Edge cases and validation"],"fullName":"nodeScaleTransform Bug fix tests - Edge cases and validation should handle invalid calculated values and use defaults","status":"passed","title":"should handle invalid calculated values and use defaults","duration":2.5302090000000135,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform","Bug fix tests - Edge cases and validation"],"fullName":"nodeScaleTransform Bug fix tests - Edge cases and validation should handle undefined temperature and variationFactor","status":"passed","title":"should handle undefined temperature and variationFactor","duration":2.229916000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform","Bug fix tests - Edge cases and validation"],"fullName":"nodeScaleTransform Bug fix tests - Edge cases and validation should handle empty arrays in calculations without throwing errors","status":"passed","title":"should handle empty arrays in calculations without throwing errors","duration":1.7587080000000697,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeScaleTransform","Bug fix tests - Edge cases and validation"],"fullName":"nodeScaleTransform Bug fix tests - Edge cases and validation should never return NaN values even with extreme inputs","status":"passed","title":"should never return NaN values even with extreme inputs","duration":1.9860409999998865,"failureMessages":[],"meta":{}}],"startTime":1754243815530,"endTime":1754243815558.986,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/node-scale.test.ts"},{"assertionResults":[{"ancestorTitles":["nodeShapeTransform"],"fullName":"nodeShapeTransform should assign shapes based on generation dimension","status":"passed","title":"should assign shapes based on generation dimension","duration":4.115083000000141,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeShapeTransform"],"fullName":"nodeShapeTransform should assign shapes based on children count dimension","status":"passed","title":"should assign shapes based on children count dimension","duration":3.8817079999998896,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeShapeTransform"],"fullName":"nodeShapeTransform should preserve existing visual metadata while adding shape","status":"passed","title":"should preserve existing visual metadata while adding shape","duration":3.462792000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeShapeTransform"],"fullName":"nodeShapeTransform should handle empty individuals gracefully","status":"passed","title":"should handle empty individuals gracefully","duration":0.32562499999994543,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeShapeTransform"],"fullName":"nodeShapeTransform should apply variation with temperature","status":"passed","title":"should apply variation with temperature","duration":2.2860829999999623,"failureMessages":[],"meta":{}},{"ancestorTitles":["nodeShapeTransform"],"fullName":"nodeShapeTransform should handle secondary dimension","status":"passed","title":"should handle secondary dimension","duration":4.307333999999855,"failureMessages":[],"meta":{}}],"startTime":1754243815546,"endTime":1754243815564.3074,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/node-shape.test.ts"},{"assertionResults":[{"ancestorTitles":["Node Size Transformer","Basic functionality"],"fullName":"Node Size Transformer Basic functionality should calculate node size based on children count dimension","status":"passed","title":"should calculate node size based on children count dimension","duration":3.649458999999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Basic functionality"],"fullName":"Node Size Transformer Basic functionality should calculate node size based on lifespan dimension","status":"passed","title":"should calculate node size based on lifespan dimension","duration":1.45112499999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Bug fix tests - Edge cases and validation"],"fullName":"Node Size Transformer Bug fix tests - Edge cases and validation should handle undefined nodeSize gracefully","status":"passed","title":"should handle undefined nodeSize gracefully","duration":2.9947910000000775,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Bug fix tests - Edge cases and validation"],"fullName":"Node Size Transformer Bug fix tests - Edge cases and validation should handle invalid nodeSize values","status":"passed","title":"should handle invalid nodeSize values","duration":2.7565830000000915,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Bug fix tests - Edge cases and validation"],"fullName":"Node Size Transformer Bug fix tests - Edge cases and validation should handle missing visual context gracefully","status":"passed","title":"should handle missing visual context gracefully","duration":1.3054590000001554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Bug fix tests - Edge cases and validation"],"fullName":"Node Size Transformer Bug fix tests - Edge cases and validation should handle missing dimensions gracefully","status":"passed","title":"should handle missing dimensions gracefully","duration":1.1112500000001546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Bug fix tests - Edge cases and validation"],"fullName":"Node Size Transformer Bug fix tests - Edge cases and validation should handle empty arrays in Math.max operations","status":"passed","title":"should handle empty arrays in Math.max operations","duration":1.5573749999998654,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Bug fix tests - Edge cases and validation"],"fullName":"Node Size Transformer Bug fix tests - Edge cases and validation should handle unknown primary dimension","status":"passed","title":"should handle unknown primary dimension","duration":1.593458000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Bug fix tests - Edge cases and validation"],"fullName":"Node Size Transformer Bug fix tests - Edge cases and validation should handle undefined temperature and variationFactor","status":"passed","title":"should handle undefined temperature and variationFactor","duration":0.7833749999999782,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Size ranges and validation"],"fullName":"Node Size Transformer Size ranges and validation should respect node size parameter ranges","status":"passed","title":"should respect node size parameter ranges","duration":6.608166999999867,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Data preservation"],"fullName":"Node Size Transformer Data preservation should preserve existing visual metadata except size","status":"passed","title":"should preserve existing visual metadata except size","duration":2.2731249999999363,"failureMessages":[],"meta":{}},{"ancestorTitles":["Node Size Transformer","Data preservation"],"fullName":"Node Size Transformer Data preservation should handle empty individuals gracefully","status":"passed","title":"should handle empty individuals gracefully","duration":0.12958400000002257,"failureMessages":[],"meta":{}}],"startTime":1754243815530,"endTime":1754243815557.2732,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/node-size.test.ts"},{"assertionResults":[{"ancestorTitles":["Pipeline","createInitialCompleteVisualMetadata"],"fullName":"Pipeline createInitialCompleteVisualMetadata should create complete visual metadata with default values","status":"passed","title":"should create complete visual metadata with default values","duration":2.6446670000000267,"failureMessages":[],"meta":{}},{"ancestorTitles":["Pipeline","createInitialCompleteVisualMetadata"],"fullName":"Pipeline createInitialCompleteVisualMetadata should include all default properties for individuals","status":"passed","title":"should include all default properties for individuals","duration":0.7234169999999267,"failureMessages":[],"meta":{}},{"ancestorTitles":["Pipeline","createInitialCompleteVisualMetadata"],"fullName":"Pipeline createInitialCompleteVisualMetadata should create edge metadata with appropriate defaults","status":"passed","title":"should create edge metadata with appropriate defaults","duration":0.5263749999999163,"failureMessages":[],"meta":{}},{"ancestorTitles":["Pipeline","createSimplePipeline"],"fullName":"Pipeline createSimplePipeline should create a pipeline with default settings","status":"failed","title":"should create a pipeline with default settings","duration":3.528082999999924,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:270:31\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","createSimplePipeline"],"fullName":"Pipeline createSimplePipeline should create a pipeline with custom settings","status":"failed","title":"should create a pipeline with custom settings","duration":0.42249999999989996,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:285:31\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","validatePipelineConfig"],"fullName":"Pipeline validatePipelineConfig should validate a correct pipeline config","status":"failed","title":"should validate a correct pipeline config","duration":0.15704200000004676,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:306:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","validatePipelineConfig"],"fullName":"Pipeline validatePipelineConfig should reject empty transformer list","status":"passed","title":"should reject empty transformer list","duration":0.3121249999999236,"failureMessages":[],"meta":{}},{"ancestorTitles":["Pipeline","validatePipelineConfig"],"fullName":"Pipeline validatePipelineConfig should reject invalid temperature","status":"failed","title":"should reject invalid temperature","duration":0.21108299999991686,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:334:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","validatePipelineConfig"],"fullName":"Pipeline validatePipelineConfig should reject invalid canvas dimensions","status":"failed","title":"should reject invalid canvas dimensions","duration":0.3394590000000335,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:347:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","validatePipelineConfig"],"fullName":"Pipeline validatePipelineConfig should reject non-existent transformer","status":"passed","title":"should reject non-existent transformer","duration":0.1323330000000169,"failureMessages":[],"meta":{}},{"ancestorTitles":["Pipeline","validatePipelineConfig"],"fullName":"Pipeline validatePipelineConfig should collect multiple errors","status":"passed","title":"should collect multiple errors","duration":0.18658300000015515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Pipeline","runPipeline"],"fullName":"Pipeline runPipeline should run a single transformer successfully","status":"failed","title":"should run a single transformer successfully","duration":0.40687499999989996,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:400:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","runPipeline"],"fullName":"Pipeline runPipeline should run multiple transformers in sequence","status":"failed","title":"should run multiple transformers in sequence","duration":0.1505000000001928,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:429:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","runPipeline"],"fullName":"Pipeline runPipeline should handle transformer failures gracefully","status":"passed","title":"should handle transformer failures gracefully","duration":5.90383299999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Pipeline","runPipeline"],"fullName":"Pipeline runPipeline should continue execution after transformer failure","status":"failed","title":"should continue execution after transformer failure","duration":0.18441699999993943,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:499:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","runPipeline"],"fullName":"Pipeline runPipeline should pass context to transformers correctly","status":"failed","title":"should pass context to transformers correctly","duration":0.12474999999994907,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:522:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","runPipeline"],"fullName":"Pipeline runPipeline should preserve position values between transformers","status":"failed","title":"should preserve position values between transformers","duration":0.21316699999988487,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:547:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}},{"ancestorTitles":["Pipeline","runPipeline"],"fullName":"Pipeline runPipeline should preserve position values in reverse order","status":"failed","title":"should preserve position values in reverse order","duration":0.1433750000001055,"failureMessages":["ReferenceError: HORIZONTAL_SPREAD is not defined\n    at /Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts:592:41\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:103:11\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:596:26\n    at file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:879:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:852:10)\n    at runTest (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1360:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)\n    at runSuite (file:///Users/kevinmaes/github.com/kevinmaes/generation-art/node_modules/.pnpm/@vitest+runner@3.1.4/node_modules/@vitest/runner/dist/index.js:1507:8)"],"meta":{}}],"startTime":1754243816066,"endTime":1754243816082.2131,"status":"failed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/pipeline.test.ts"},{"assertionResults":[{"ancestorTitles":["Transformers Registry"],"fullName":"Transformers Registry should export transformers object","status":"passed","title":"should export transformers object","duration":0.7768750000000182,"failureMessages":[],"meta":{}},{"ancestorTitles":["Transformers Registry"],"fullName":"Transformers Registry should have horizontal spread transformer","status":"passed","title":"should have horizontal spread transformer","duration":0.20608400000014626,"failureMessages":[],"meta":{}},{"ancestorTitles":["Transformers Registry"],"fullName":"Transformers Registry should get transformer by ID","status":"passed","title":"should get transformer by ID","duration":0.08579199999985576,"failureMessages":[],"meta":{}},{"ancestorTitles":["Transformers Registry"],"fullName":"Transformers Registry should return undefined for non-existent transformer","status":"passed","title":"should return undefined for non-existent transformer","duration":0.05791699999986122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Transformers Registry"],"fullName":"Transformers Registry should get all transformers","status":"passed","title":"should get all transformers","duration":0.279166000000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Transformers Registry"],"fullName":"Transformers Registry should get transformers by category","status":"passed","title":"should get transformers by category","duration":0.4389579999999569,"failureMessages":[],"meta":{}},{"ancestorTitles":["Transformers Registry"],"fullName":"Transformers Registry should get all categories","status":"passed","title":"should get all categories","duration":0.22045800000000781,"failureMessages":[],"meta":{}},{"ancestorTitles":["Transformers Registry"],"fullName":"Transformers Registry should have valid transformer configurations","status":"passed","title":"should have valid transformer configurations","duration":0.7690419999998994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should transform context with individuals","status":"passed","title":"should transform context with individuals","duration":2.725500000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer"],"fullName":"Horizontal Spread Transformer should handle empty individuals array","status":"passed","title":"should handle empty individuals array","duration":0.44954200000006495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Horizontal Spread Transformer","Vertical Spread Transformer"],"fullName":"Horizontal Spread Transformer Vertical Spread Transformer should transform context with individuals and preserve x position","status":"passed","title":"should transform context with individuals and preserve x position","duration":3.051166000000194,"failureMessages":[],"meta":{}}],"startTime":1754243816064,"endTime":1754243816073.0513,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/transformers.test.ts"},{"assertionResults":[{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should position individuals vertically based on generation dimension","status":"todo","title":"should position individuals vertically based on generation dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should position individuals vertically based on birth year dimension","status":"todo","title":"should position individuals vertically based on birth year dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should position individuals vertically based on children count dimension","status":"todo","title":"should position individuals vertically based on children count dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should position individuals vertically based on lifespan dimension","status":"todo","title":"should position individuals vertically based on lifespan dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should position individuals vertically based on name length dimension","status":"todo","title":"should position individuals vertically based on name length dimension","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should respect primary and secondary dimension weights","status":"todo","title":"should respect primary and secondary dimension weights","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should apply temperature-based randomness correctly","status":"todo","title":"should apply temperature-based randomness correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should apply variation factor correctly","status":"todo","title":"should apply variation factor correctly","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should respect vertical padding parameter","status":"todo","title":"should respect vertical padding parameter","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should respect spacing parameter (tight, compact, normal, loose, sparse)","status":"todo","title":"should respect spacing parameter (tight, compact, normal, loose, sparse)","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should apply node size based on visual parameters","status":"todo","title":"should apply node size based on visual parameters","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should apply primary color from visual parameters","status":"todo","title":"should apply primary color from visual parameters","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should preserve existing x position from previous transformers","status":"todo","title":"should preserve existing x position from previous transformers","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should handle empty individual data gracefully","status":"todo","title":"should handle empty individual data gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Vertical Spread Transformer"],"fullName":"Vertical Spread Transformer should handle missing dimension values with appropriate defaults","status":"todo","title":"should handle missing dimension values with appropriate defaults","failureMessages":[],"meta":{}}],"startTime":1754243814377,"endTime":1754243814377,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/transformers/vertical-spread.test.ts"},{"assertionResults":[{"ancestorTitles":["LLM Service","getProviderModel"],"fullName":"LLM Service getProviderModel should return OpenAI model when provider is openai","status":"passed","title":"should return OpenAI model when provider is openai","duration":2.2407499999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderModel"],"fullName":"LLM Service getProviderModel should use default OpenAI model when not specified","status":"passed","title":"should use default OpenAI model when not specified","duration":0.4163330000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderModel"],"fullName":"LLM Service getProviderModel should return Anthropic model when provider is anthropic","status":"passed","title":"should return Anthropic model when provider is anthropic","duration":0.4319580000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderModel"],"fullName":"LLM Service getProviderModel should throw error when OpenAI API key is missing","status":"passed","title":"should throw error when OpenAI API key is missing","duration":0.7580829999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderModel"],"fullName":"LLM Service getProviderModel should throw error when Anthropic API key is missing","status":"passed","title":"should throw error when Anthropic API key is missing","duration":0.38599999999996726,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderModel"],"fullName":"LLM Service getProviderModel should throw error for unsupported provider","status":"passed","title":"should throw error for unsupported provider","duration":0.34074999999995725,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderModel"],"fullName":"LLM Service getProviderModel should default to openai when provider not specified","status":"passed","title":"should default to openai when provider not specified","duration":0.3930419999999799,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","validateApiKeys"],"fullName":"LLM Service validateApiKeys should return valid for OpenAI with API key","status":"passed","title":"should return valid for OpenAI with API key","duration":0.32629200000002356,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","validateApiKeys"],"fullName":"LLM Service validateApiKeys should return missing keys for OpenAI without API key","status":"passed","title":"should return missing keys for OpenAI without API key","duration":0.37137500000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","validateApiKeys"],"fullName":"LLM Service validateApiKeys should return valid for Anthropic with API key","status":"passed","title":"should return valid for Anthropic with API key","duration":0.2453750000000241,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","validateApiKeys"],"fullName":"LLM Service validateApiKeys should return missing keys for Anthropic without API key","status":"passed","title":"should return missing keys for Anthropic without API key","duration":0.21458300000000463,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","validateApiKeys"],"fullName":"LLM Service validateApiKeys should handle unknown provider","status":"passed","title":"should handle unknown provider","duration":0.2057500000000232,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderInfo"],"fullName":"LLM Service getProviderInfo should return OpenAI provider info","status":"passed","title":"should return OpenAI provider info","duration":0.23491699999999582,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderInfo"],"fullName":"LLM Service getProviderInfo should return Anthropic provider info","status":"passed","title":"should return Anthropic provider info","duration":0.20708300000001145,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","getProviderInfo"],"fullName":"LLM Service getProviderInfo should use default values when not specified","status":"passed","title":"should use default values when not specified","duration":0.22679099999999153,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","createCacheKey"],"fullName":"LLM Service createCacheKey should create consistent hash for same inputs","status":"passed","title":"should create consistent hash for same inputs","duration":0.3028340000000185,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","createCacheKey"],"fullName":"LLM Service createCacheKey should create different hash for different prompts","status":"passed","title":"should create different hash for different prompts","duration":0.31175000000001774,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","createCacheKey"],"fullName":"LLM Service createCacheKey should create different hash for different parameters","status":"passed","title":"should create different hash for different parameters","duration":0.21529099999997925,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","createCacheKey"],"fullName":"LLM Service createCacheKey should handle multiple parameters","status":"passed","title":"should handle multiple parameters","duration":0.23870899999997164,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","createCacheKey"],"fullName":"LLM Service createCacheKey should handle empty parameters","status":"passed","title":"should handle empty parameters","duration":0.19120800000001736,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","createCacheKey"],"fullName":"LLM Service createCacheKey should convert all parameters to strings","status":"passed","title":"should convert all parameters to strings","duration":0.1845000000000141,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","handleLLMError"],"fullName":"LLM Service handleLLMError should handle network/fetch errors for OpenAI","status":"passed","title":"should handle network/fetch errors for OpenAI","duration":0.25099999999997635,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","handleLLMError"],"fullName":"LLM Service handleLLMError should handle network/fetch errors for Anthropic","status":"passed","title":"should handle network/fetch errors for Anthropic","duration":0.21404200000000628,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","handleLLMError"],"fullName":"LLM Service handleLLMError should handle rate limit errors","status":"passed","title":"should handle rate limit errors","duration":0.19308399999999892,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","handleLLMError"],"fullName":"LLM Service handleLLMError should handle authentication errors","status":"passed","title":"should handle authentication errors","duration":0.19366700000000492,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","handleLLMError"],"fullName":"LLM Service handleLLMError should return original error for unknown errors","status":"passed","title":"should return original error for unknown errors","duration":0.18708400000002712,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","handleLLMError"],"fullName":"LLM Service handleLLMError should handle non-Error objects","status":"passed","title":"should handle non-Error objects","duration":0.18824999999998226,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","handleLLMError"],"fullName":"LLM Service handleLLMError should handle null/undefined","status":"passed","title":"should handle null/undefined","duration":0.1832499999999868,"failureMessages":[],"meta":{}},{"ancestorTitles":["LLM Service","llmService namespace"],"fullName":"LLM Service llmService namespace should export all functions","status":"passed","title":"should export all functions","duration":0.23291600000004564,"failureMessages":[],"meta":{}}],"startTime":1754243816047,"endTime":1754243816058.233,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/services/llm-service.test.ts"},{"assertionResults":[{"ancestorTitles":["Smart LLM Service","generateSmartTransformerResponse"],"fullName":"Smart LLM Service generateSmartTransformerResponse should successfully generate LLM response","status":"passed","title":"should successfully generate LLM response","duration":3.6150410000000193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","generateSmartTransformerResponse"],"fullName":"Smart LLM Service generateSmartTransformerResponse should use cached results when available","status":"passed","title":"should use cached results when available","duration":1.1581670000000486,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","generateSmartTransformerResponse"],"fullName":"Smart LLM Service generateSmartTransformerResponse should handle cache expiration","status":"passed","title":"should handle cache expiration","duration":0.7292090000000826,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","generateSmartTransformerResponse"],"fullName":"Smart LLM Service generateSmartTransformerResponse should handle rate limiting","status":"skipped","title":"should handle rate limiting","failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","generateSmartTransformerResponse"],"fullName":"Smart LLM Service generateSmartTransformerResponse should handle API errors gracefully","status":"skipped","title":"should handle API errors gracefully","failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","generateSmartTransformerResponse"],"fullName":"Smart LLM Service generateSmartTransformerResponse should handle rate limit errors specifically","status":"passed","title":"should handle rate limit errors specifically","duration":5.090959000000112,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","generateSmartTransformerResponse"],"fullName":"Smart LLM Service generateSmartTransformerResponse should track API call counts","status":"skipped","title":"should track API call counts","failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","getProviderOptimizedPrompt"],"fullName":"Smart LLM Service getProviderOptimizedPrompt should optimize for OpenAI","status":"passed","title":"should optimize for OpenAI","duration":0.3755419999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","getProviderOptimizedPrompt"],"fullName":"Smart LLM Service getProviderOptimizedPrompt should optimize for Anthropic","status":"passed","title":"should optimize for Anthropic","duration":0.23912499999983083,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","getProviderOptimizedPrompt"],"fullName":"Smart LLM Service getProviderOptimizedPrompt should use explicit provider parameter","status":"passed","title":"should use explicit provider parameter","duration":0.19404200000008132,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","getProviderOptimizedPrompt"],"fullName":"Smart LLM Service getProviderOptimizedPrompt should return base prompt for unknown providers","status":"passed","title":"should return base prompt for unknown providers","duration":0.16575000000011642,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","clearTransformerCache"],"fullName":"Smart LLM Service clearTransformerCache should clear cache for specific transformer","status":"passed","title":"should clear cache for specific transformer","duration":0.7714580000001661,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","clearTransformerCache"],"fullName":"Smart LLM Service clearTransformerCache should not affect other transformer caches","status":"passed","title":"should not affect other transformer caches","duration":0.6362919999999122,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","getTransformerStats"],"fullName":"Smart LLM Service getTransformerStats should return correct stats for new transformer","status":"passed","title":"should return correct stats for new transformer","duration":0.21687500000007276,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","getTransformerStats"],"fullName":"Smart LLM Service getTransformerStats should track stats after API calls","status":"passed","title":"should track stats after API calls","duration":1.5439590000000862,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","executeSmartTransformer"],"fullName":"Smart LLM Service executeSmartTransformer should execute transformer with optimized prompt","status":"passed","title":"should execute transformer with optimized prompt","duration":0.4808330000000751,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","executeSmartTransformer"],"fullName":"Smart LLM Service executeSmartTransformer should use default temperature when not provided","status":"passed","title":"should use default temperature when not provided","duration":0.2317920000000413,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","executeSmartTransformer"],"fullName":"Smart LLM Service executeSmartTransformer should apply provider optimization","status":"passed","title":"should apply provider optimization","duration":0.25791599999979553,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","executeSmartTransformer"],"fullName":"Smart LLM Service executeSmartTransformer should propagate errors from generateSmartTransformerResponse","status":"passed","title":"should propagate errors from generateSmartTransformerResponse","duration":0.5400409999999738,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","Integration tests"],"fullName":"Smart LLM Service Integration tests should handle complex workflow with multiple transformers","status":"passed","title":"should handle complex workflow with multiple transformers","duration":0.3290420000000722,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart LLM Service","Integration tests"],"fullName":"Smart LLM Service Integration tests should maintain cache isolation between transformers","status":"passed","title":"should maintain cache isolation between transformers","duration":0.2709580000000642,"failureMessages":[],"meta":{}}],"startTime":1754243815542,"endTime":1754243815559.329,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/services/smart-llm-service.test.ts"},{"assertionResults":[{"ancestorTitles":["Smart Transformer Utils","extractLLMProperties"],"fullName":"Smart Transformer Utils extractLLMProperties should extract specified individual properties","status":"passed","title":"should extract specified individual properties","duration":1.7487080000000788,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","extractLLMProperties"],"fullName":"Smart Transformer Utils extractLLMProperties should extract edge control points","status":"passed","title":"should extract edge control points","duration":0.6072920000001432,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","extractLLMProperties"],"fullName":"Smart Transformer Utils extractLLMProperties should extract global properties","status":"passed","title":"should extract global properties","duration":0.10399999999981446,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","extractLLMProperties"],"fullName":"Smart Transformer Utils extractLLMProperties should handle missing properties gracefully","status":"passed","title":"should handle missing properties gracefully","duration":0.14829199999985576,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","extractLLMProperties"],"fullName":"Smart Transformer Utils extractLLMProperties should use custom extractor when provided","status":"passed","title":"should use custom extractor when provided","duration":0.07016700000008314,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","extractLLMProperties"],"fullName":"Smart Transformer Utils extractLLMProperties should handle empty metadata","status":"passed","title":"should handle empty metadata","duration":0.10024999999995998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","mergeLLMResponse"],"fullName":"Smart Transformer Utils mergeLLMResponse should merge individual properties correctly","status":"passed","title":"should merge individual properties correctly","duration":0.24637500000017099,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","mergeLLMResponse"],"fullName":"Smart Transformer Utils mergeLLMResponse should merge edge control points correctly","status":"passed","title":"should merge edge control points correctly","duration":0.1462500000000091,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","mergeLLMResponse"],"fullName":"Smart Transformer Utils mergeLLMResponse should merge global properties","status":"passed","title":"should merge global properties","duration":0.21145799999999326,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","mergeLLMResponse"],"fullName":"Smart Transformer Utils mergeLLMResponse should preserve families and tree","status":"passed","title":"should preserve families and tree","duration":0.08833400000003166,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","mergeLLMResponse"],"fullName":"Smart Transformer Utils mergeLLMResponse should use custom merger when provided","status":"passed","title":"should use custom merger when provided","duration":0.06470899999999347,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","mergeLLMResponse"],"fullName":"Smart Transformer Utils mergeLLMResponse should handle empty LLM response","status":"passed","title":"should handle empty LLM response","duration":0.05366700000013225,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildTreeStructureDescription"],"fullName":"Smart Transformer Utils buildTreeStructureDescription should build correct tree structure description","status":"passed","title":"should build correct tree structure description","duration":0.11633299999994051,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildTreeStructureDescription"],"fullName":"Smart Transformer Utils buildTreeStructureDescription should handle missing metadata gracefully","status":"passed","title":"should handle missing metadata gracefully","duration":0.10416699999996126,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildConnectionsDescription"],"fullName":"Smart Transformer Utils buildConnectionsDescription should build connections description with sampling","status":"passed","title":"should build connections description with sampling","duration":0.2472499999998945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildConnectionsDescription"],"fullName":"Smart Transformer Utils buildConnectionsDescription should prioritize root nodes","status":"passed","title":"should prioritize root nodes","duration":0.1989579999999478,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildConnectionsDescription"],"fullName":"Smart Transformer Utils buildConnectionsDescription should handle missing generation data","status":"passed","title":"should handle missing generation data","duration":0.057542000000012195,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildCurrentStateDescription"],"fullName":"Smart Transformer Utils buildCurrentStateDescription should describe existing data","status":"passed","title":"should describe existing data","duration":0.11824999999998909,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildCurrentStateDescription"],"fullName":"Smart Transformer Utils buildCurrentStateDescription should handle no existing data","status":"passed","title":"should handle no existing data","duration":0.038000000000010914,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildCurrentStateDescription"],"fullName":"Smart Transformer Utils buildCurrentStateDescription should handle partial data","status":"passed","title":"should handle partial data","duration":0.2107499999999618,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","getTemperatureInstructions"],"fullName":"Smart Transformer Utils getTemperatureInstructions should return strict instructions for low temperature","status":"passed","title":"should return strict instructions for low temperature","duration":0.22412499999995816,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","getTemperatureInstructions"],"fullName":"Smart Transformer Utils getTemperatureInstructions should return balanced instructions for medium temperature","status":"passed","title":"should return balanced instructions for medium temperature","duration":0.1855000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","getTemperatureInstructions"],"fullName":"Smart Transformer Utils getTemperatureInstructions should return creative instructions for high temperature","status":"passed","title":"should return creative instructions for high temperature","duration":0.07224999999993997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildGenericPrompt"],"fullName":"Smart Transformer Utils buildGenericPrompt should build complete prompt with all sections","status":"passed","title":"should build complete prompt with all sections","duration":0.24604199999998855,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildGenericPrompt"],"fullName":"Smart Transformer Utils buildGenericPrompt should build prompt without style instructions","status":"passed","title":"should build prompt without style instructions","duration":0.1769170000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildSmartTransformerPrompt"],"fullName":"Smart Transformer Utils buildSmartTransformerPrompt should build complete prompt using config","status":"passed","title":"should build complete prompt using config","duration":0.616457999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildSmartTransformerPrompt"],"fullName":"Smart Transformer Utils buildSmartTransformerPrompt should handle missing canvas dimensions","status":"passed","title":"should handle missing canvas dimensions","duration":0.25324999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildSmartTransformerPrompt"],"fullName":"Smart Transformer Utils buildSmartTransformerPrompt should handle missing layout style","status":"passed","title":"should handle missing layout style","duration":0.16362500000013824,"failureMessages":[],"meta":{}},{"ancestorTitles":["Smart Transformer Utils","buildSmartTransformerPrompt"],"fullName":"Smart Transformer Utils buildSmartTransformerPrompt should use default temperature when not provided","status":"passed","title":"should use default temperature when not provided","duration":0.07437499999991815,"failureMessages":[],"meta":{}}],"startTime":1754243815561,"endTime":1754243815569.1636,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/services/smart-transformer-utils.test.ts"},{"assertionResults":[{"ancestorTitles":["Helper Functions","getIndividualCoord"],"fullName":"Helper Functions getIndividualCoord should return coordinates within canvas bounds","status":"passed","title":"should return coordinates within canvas bounds","duration":3.5822499999999877,"failureMessages":[],"meta":{}},{"ancestorTitles":["Helper Functions","getIndividualCoord"],"fullName":"Helper Functions getIndividualCoord should return consistent coordinates for same ID","status":"passed","title":"should return consistent coordinates for same ID","duration":0.3735409999999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["Helper Functions","getIndividualCoord"],"fullName":"Helper Functions getIndividualCoord should handle different canvas sizes","status":"passed","title":"should handle different canvas sizes","duration":0.2144999999999868,"failureMessages":[],"meta":{}},{"ancestorTitles":["Helper Functions","getIndividualCoord"],"fullName":"Helper Functions getIndividualCoord should return different coordinates for different IDs","status":"passed","title":"should return different coordinates for different IDs","duration":0.1722080000000119,"failureMessages":[],"meta":{}},{"ancestorTitles":["Helper Functions","getUniqueEdges"],"fullName":"Helper Functions getUniqueEdges should return unique edges from family data","status":"passed","title":"should return unique edges from family data","duration":0.8574999999999591,"failureMessages":[],"meta":{}},{"ancestorTitles":["Helper Functions","getUniqueEdges"],"fullName":"Helper Functions getUniqueEdges should handle empty data","status":"passed","title":"should handle empty data","duration":0.1014589999999771,"failureMessages":[],"meta":{}},{"ancestorTitles":["Helper Functions","getUniqueEdges"],"fullName":"Helper Functions getUniqueEdges should handle individuals with no parents","status":"passed","title":"should handle individuals with no parents","duration":0.2350420000000213,"failureMessages":[],"meta":{}},{"ancestorTitles":["Helper Functions","getUniqueEdges"],"fullName":"Helper Functions getUniqueEdges should handle duplicate parent relationships","status":"passed","title":"should handle duplicate parent relationships","duration":0.1845419999999649,"failureMessages":[],"meta":{}}],"startTime":1754243816512,"endTime":1754243816518.235,"status":"passed","message":"","name":"/Users/kevinmaes/github.com/kevinmaes/generation-art/client/src/display/components/helpers.test.ts"}]}
 ELIFECYCLE  Test failed. See above for more details.
